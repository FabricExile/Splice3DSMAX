#ifndef __KL2EDK_AUTOGEN_Mat33_cd__
#define __KL2EDK_AUTOGEN_Mat33_cd__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Mat33_cd.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.4.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 4
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Vec3_cd.h"
#include "Complex_d.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Mat33_cd'
// Defined at Mat33_cd.kl:52:1

struct Mat33_cd
{
  typedef Mat33_cd &Result;
  typedef Mat33_cd const &INParam;
  typedef Mat33_cd &IOParam;
  typedef Mat33_cd &OUTParam;
  
  Vec3_cd row0;
  Vec3_cd row1;
  Vec3_cd row2;
};

inline void Traits<Mat33_cd>::ConstructEmpty( Mat33_cd &val )
{
  Traits< Vec3_cd >::ConstructEmpty( val.row0 );
  Traits< Vec3_cd >::ConstructEmpty( val.row1 );
  Traits< Vec3_cd >::ConstructEmpty( val.row2 );
}
inline void Traits<Mat33_cd>::ConstructCopy( Mat33_cd &lhs, Mat33_cd const &rhs )
{
  Traits< Vec3_cd >::ConstructCopy( lhs.row0, rhs.row0 );
  Traits< Vec3_cd >::ConstructCopy( lhs.row1, rhs.row1 );
  Traits< Vec3_cd >::ConstructCopy( lhs.row2, rhs.row2 );
}
inline void Traits<Mat33_cd>::AssignCopy( Mat33_cd &lhs, Mat33_cd const &rhs )
{
  Traits< Vec3_cd >::AssignCopy( lhs.row0, rhs.row0 );
  Traits< Vec3_cd >::AssignCopy( lhs.row1, rhs.row1 );
  Traits< Vec3_cd >::AssignCopy( lhs.row2, rhs.row2 );
}
inline void Traits<Mat33_cd>::Destruct( Mat33_cd &val )
{
  Traits< Vec3_cd >::Destruct( val.row2 );
  Traits< Vec3_cd >::Destruct( val.row1 );
  Traits< Vec3_cd >::Destruct( val.row0 );
}
}}}

#endif // __KL2EDK_AUTOGEN_Mat33_cd__
