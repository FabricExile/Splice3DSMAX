#pragma once

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Complex_d.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.6.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 6
# error "This file needs to be rebuilt for the current EDK version!"
#endif

// Core\Clients\CAPI\KL2EDK.cpp:803
#include "global.h"

namespace Fabric {
namespace EDK {
namespace KL {


// KL struct 'Complex_d'
// Defined at Complex_d.kl:17:1

struct Complex_d
{
  typedef Complex_d &Result;
  typedef Complex_d const &INParam;
  typedef Complex_d &IOParam;
  typedef Complex_d &OUTParam;
  
  ::Fabric::EDK::KL::Float64 re;
  ::Fabric::EDK::KL::Float64 im;
};

inline void Traits<Complex_d>::ConstructEmpty( Complex_d &val )
{
  Traits< ::Fabric::EDK::KL::Float64 >::ConstructEmpty( val.re );
  Traits< ::Fabric::EDK::KL::Float64 >::ConstructEmpty( val.im );
}
inline void Traits<Complex_d>::ConstructCopy( Complex_d &lhs, Complex_d const &rhs )
{
  Traits< ::Fabric::EDK::KL::Float64 >::ConstructCopy( lhs.re, rhs.re );
  Traits< ::Fabric::EDK::KL::Float64 >::ConstructCopy( lhs.im, rhs.im );
}
inline void Traits<Complex_d>::AssignCopy( Complex_d &lhs, Complex_d const &rhs )
{
  Traits< ::Fabric::EDK::KL::Float64 >::AssignCopy( lhs.re, rhs.re );
  Traits< ::Fabric::EDK::KL::Float64 >::AssignCopy( lhs.im, rhs.im );
}
inline void Traits<Complex_d>::Destruct( Complex_d &val )
{
  Traits< ::Fabric::EDK::KL::Float64 >::Destruct( val.im );
  Traits< ::Fabric::EDK::KL::Float64 >::Destruct( val.re );
}
} // namespace KL
} // namespace EDK
} // namespace Fabric


