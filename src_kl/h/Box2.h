#pragma once

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Box2.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.6.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 6
# error "This file needs to be rebuilt for the current EDK version!"
#endif

// Core\Clients\CAPI\KL2EDK.cpp:803
#include "global.h"
// Core\Clients\CAPI\KL2EDK.cpp:855
#include "Vec2.h"

namespace Fabric {
namespace EDK {
namespace KL {


// KL struct 'Box2'
// Defined at Box2.kl:22:1

struct Box2
{
  typedef Box2 &Result;
  typedef Box2 const &INParam;
  typedef Box2 &IOParam;
  typedef Box2 &OUTParam;
  
  ::Fabric::EDK::KL::Vec2 min;
  ::Fabric::EDK::KL::Vec2 max;
};

inline void Traits<Box2>::ConstructEmpty( Box2 &val )
{
  Traits< ::Fabric::EDK::KL::Vec2 >::ConstructEmpty( val.min );
  Traits< ::Fabric::EDK::KL::Vec2 >::ConstructEmpty( val.max );
}
inline void Traits<Box2>::ConstructCopy( Box2 &lhs, Box2 const &rhs )
{
  Traits< ::Fabric::EDK::KL::Vec2 >::ConstructCopy( lhs.min, rhs.min );
  Traits< ::Fabric::EDK::KL::Vec2 >::ConstructCopy( lhs.max, rhs.max );
}
inline void Traits<Box2>::AssignCopy( Box2 &lhs, Box2 const &rhs )
{
  Traits< ::Fabric::EDK::KL::Vec2 >::AssignCopy( lhs.min, rhs.min );
  Traits< ::Fabric::EDK::KL::Vec2 >::AssignCopy( lhs.max, rhs.max );
}
inline void Traits<Box2>::Destruct( Box2 &val )
{
  Traits< ::Fabric::EDK::KL::Vec2 >::Destruct( val.max );
  Traits< ::Fabric::EDK::KL::Vec2 >::Destruct( val.min );
}
} // namespace KL
} // namespace EDK
} // namespace Fabric


