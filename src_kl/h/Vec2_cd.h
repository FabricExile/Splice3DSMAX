#pragma once

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Vec2_cd.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.7.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 7
# error "This file needs to be rebuilt for the current EDK version!"
#endif

// Core\Clients\CAPI\KL2EDK.cpp:812
#include "global.h"
// Core\Clients\CAPI\KL2EDK.cpp:864
#include "Complex_d.h"

namespace Fabric {
namespace EDK {
namespace KL {


// KL struct 'Vec2_cd'
// Defined at Vec2_cd.kl:18:1

struct Vec2_cd
{
  typedef Vec2_cd &Result;
  typedef Vec2_cd const &INParam;
  typedef Vec2_cd &IOParam;
  typedef Vec2_cd &OUTParam;
  
  ::Fabric::EDK::KL::Complex_d x;
  ::Fabric::EDK::KL::Complex_d y;
};

inline void Traits<Vec2_cd>::ConstructEmpty( Vec2_cd &val )
{
  Traits< ::Fabric::EDK::KL::Complex_d >::ConstructEmpty( val.x );
  Traits< ::Fabric::EDK::KL::Complex_d >::ConstructEmpty( val.y );
}
inline void Traits<Vec2_cd>::ConstructCopy( Vec2_cd &lhs, Vec2_cd const &rhs )
{
  Traits< ::Fabric::EDK::KL::Complex_d >::ConstructCopy( lhs.x, rhs.x );
  Traits< ::Fabric::EDK::KL::Complex_d >::ConstructCopy( lhs.y, rhs.y );
}
inline void Traits<Vec2_cd>::AssignCopy( Vec2_cd &lhs, Vec2_cd const &rhs )
{
  Traits< ::Fabric::EDK::KL::Complex_d >::AssignCopy( lhs.x, rhs.x );
  Traits< ::Fabric::EDK::KL::Complex_d >::AssignCopy( lhs.y, rhs.y );
}
inline void Traits<Vec2_cd>::Destruct( Vec2_cd &val )
{
  Traits< ::Fabric::EDK::KL::Complex_d >::Destruct( val.y );
  Traits< ::Fabric::EDK::KL::Complex_d >::Destruct( val.x );
}
} // namespace KL
} // namespace EDK
} // namespace Fabric


