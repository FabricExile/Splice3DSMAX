#ifndef __KL2EDK_AUTOGEN_Mat_cd__
#define __KL2EDK_AUTOGEN_Mat_cd__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Mat_cd.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.3.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 3
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Complex_d.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Mat_cd'
// Defined at Mat_cd.kl:19:1

struct Mat_cd
{
  typedef Mat_cd &Result;
  typedef Mat_cd const &INParam;
  typedef Mat_cd &IOParam;
  typedef Mat_cd &OUTParam;
  
  SInt32 rows;
  SInt32 cols;
  VariableArray< Complex_d > vals;
};

inline void Traits<Mat_cd>::ConstructEmpty( Mat_cd &val )
{
  Traits< SInt32 >::ConstructEmpty( val.rows );
  Traits< SInt32 >::ConstructEmpty( val.cols );
  Traits< VariableArray< Complex_d > >::ConstructEmpty( val.vals );
}
inline void Traits<Mat_cd>::ConstructCopy( Mat_cd &lhs, Mat_cd const &rhs )
{
  Traits< SInt32 >::ConstructCopy( lhs.rows, rhs.rows );
  Traits< SInt32 >::ConstructCopy( lhs.cols, rhs.cols );
  Traits< VariableArray< Complex_d > >::ConstructCopy( lhs.vals, rhs.vals );
}
inline void Traits<Mat_cd>::AssignCopy( Mat_cd &lhs, Mat_cd const &rhs )
{
  Traits< SInt32 >::AssignCopy( lhs.rows, rhs.rows );
  Traits< SInt32 >::AssignCopy( lhs.cols, rhs.cols );
  Traits< VariableArray< Complex_d > >::AssignCopy( lhs.vals, rhs.vals );
}
inline void Traits<Mat_cd>::Destruct( Mat_cd &val )
{
  Traits< VariableArray< Complex_d > >::Destruct( val.vals );
  Traits< SInt32 >::Destruct( val.cols );
  Traits< SInt32 >::Destruct( val.rows );
}
}}}

#endif // __KL2EDK_AUTOGEN_Mat_cd__
