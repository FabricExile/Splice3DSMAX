#ifndef __KL2EDK_AUTOGEN_Vec2_c__
#define __KL2EDK_AUTOGEN_Vec2_c__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Vec2_c.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.4.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 4
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Complex.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Vec2_c'
// Defined at Vec2_c.kl:18:1

struct Vec2_c
{
  typedef Vec2_c &Result;
  typedef Vec2_c const &INParam;
  typedef Vec2_c &IOParam;
  typedef Vec2_c &OUTParam;
  
  Complex x;
  Complex y;
};

inline void Traits<Vec2_c>::ConstructEmpty( Vec2_c &val )
{
  Traits< Complex >::ConstructEmpty( val.x );
  Traits< Complex >::ConstructEmpty( val.y );
}
inline void Traits<Vec2_c>::ConstructCopy( Vec2_c &lhs, Vec2_c const &rhs )
{
  Traits< Complex >::ConstructCopy( lhs.x, rhs.x );
  Traits< Complex >::ConstructCopy( lhs.y, rhs.y );
}
inline void Traits<Vec2_c>::AssignCopy( Vec2_c &lhs, Vec2_c const &rhs )
{
  Traits< Complex >::AssignCopy( lhs.x, rhs.x );
  Traits< Complex >::AssignCopy( lhs.y, rhs.y );
}
inline void Traits<Vec2_c>::Destruct( Vec2_c &val )
{
  Traits< Complex >::Destruct( val.y );
  Traits< Complex >::Destruct( val.x );
}
}}}

#endif // __KL2EDK_AUTOGEN_Vec2_c__
