#ifndef __KL2EDK_AUTOGEN_Vec_c__
#define __KL2EDK_AUTOGEN_Vec_c__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Vec_c.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.3.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 3
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Complex.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Vec_c'
// Defined at Vec_c.kl:19:1

struct Vec_c
{
  typedef Vec_c &Result;
  typedef Vec_c const &INParam;
  typedef Vec_c &IOParam;
  typedef Vec_c &OUTParam;
  
  VariableArray< Complex > vals;
};

inline void Traits<Vec_c>::ConstructEmpty( Vec_c &val )
{
  Traits< VariableArray< Complex > >::ConstructEmpty( val.vals );
}
inline void Traits<Vec_c>::ConstructCopy( Vec_c &lhs, Vec_c const &rhs )
{
  Traits< VariableArray< Complex > >::ConstructCopy( lhs.vals, rhs.vals );
}
inline void Traits<Vec_c>::AssignCopy( Vec_c &lhs, Vec_c const &rhs )
{
  Traits< VariableArray< Complex > >::AssignCopy( lhs.vals, rhs.vals );
}
inline void Traits<Vec_c>::Destruct( Vec_c &val )
{
  Traits< VariableArray< Complex > >::Destruct( val.vals );
}
}}}

#endif // __KL2EDK_AUTOGEN_Vec_c__
