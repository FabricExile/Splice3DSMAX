#pragma once

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Mat.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.7.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 7
# error "This file needs to be rebuilt for the current EDK version!"
#endif

// Core\Clients\CAPI\KL2EDK.cpp:812
#include "global.h"

namespace Fabric {
namespace EDK {
namespace KL {


// KL struct 'Mat'
// Defined at Mat.kl:18:1

struct Mat
{
  typedef Mat &Result;
  typedef Mat const &INParam;
  typedef Mat &IOParam;
  typedef Mat &OUTParam;
  
  ::Fabric::EDK::KL::SInt32 rows;
  ::Fabric::EDK::KL::SInt32 cols;
  ::Fabric::EDK::KL::VariableArray< ::Fabric::EDK::KL::Float32 > vals;
};

inline void Traits<Mat>::ConstructEmpty( Mat &val )
{
  Traits< ::Fabric::EDK::KL::SInt32 >::ConstructEmpty( val.rows );
  Traits< ::Fabric::EDK::KL::SInt32 >::ConstructEmpty( val.cols );
  Traits< ::Fabric::EDK::KL::VariableArray< ::Fabric::EDK::KL::Float32 > >::ConstructEmpty( val.vals );
}
inline void Traits<Mat>::ConstructCopy( Mat &lhs, Mat const &rhs )
{
  Traits< ::Fabric::EDK::KL::SInt32 >::ConstructCopy( lhs.rows, rhs.rows );
  Traits< ::Fabric::EDK::KL::SInt32 >::ConstructCopy( lhs.cols, rhs.cols );
  Traits< ::Fabric::EDK::KL::VariableArray< ::Fabric::EDK::KL::Float32 > >::ConstructCopy( lhs.vals, rhs.vals );
}
inline void Traits<Mat>::AssignCopy( Mat &lhs, Mat const &rhs )
{
  Traits< ::Fabric::EDK::KL::SInt32 >::AssignCopy( lhs.rows, rhs.rows );
  Traits< ::Fabric::EDK::KL::SInt32 >::AssignCopy( lhs.cols, rhs.cols );
  Traits< ::Fabric::EDK::KL::VariableArray< ::Fabric::EDK::KL::Float32 > >::AssignCopy( lhs.vals, rhs.vals );
}
inline void Traits<Mat>::Destruct( Mat &val )
{
  Traits< ::Fabric::EDK::KL::VariableArray< ::Fabric::EDK::KL::Float32 > >::Destruct( val.vals );
  Traits< ::Fabric::EDK::KL::SInt32 >::Destruct( val.cols );
  Traits< ::Fabric::EDK::KL::SInt32 >::Destruct( val.rows );
}
} // namespace KL
} // namespace EDK
} // namespace Fabric


